name: Compile LaTeX Documents

on:
  workflow_run:
    workflows:
      - Build LaTeX Docker Image
    types:
      - completed
  push:
    paths:
      - "logic_v*/*.tex" # Adjusted path trigger
      - ".github/workflows/compile-latex.yml"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository_owner }}/latex-build:latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Compile LaTeX documents using a bash function
      - name: Compile All LaTeX Documents
        shell: bash # Explicitly use bash
        run: |
          # Define the compilation function
          compile_and_rename() {
            local dir="$1"
            echo "--- Compiling in $dir ---"
            cd "$dir"
            if ! latexmk -pdf -interaction=nonstopmode -halt-on-error -file-line-error *.tex; then
              echo "!!! LaTeX compilation failed in $dir !!!"
              exit 1 # Exit if compilation fails
            fi
            echo "--- Renaming PDFs in $dir ---"
            for file in *.pdf; do
              # Check if file exists and is a regular file before moving
              if [ -f "$file" ]; then
                echo "Renaming $file to ${dir}_${file}"
                mv "$file" "${dir}_${file}"
              else
                 echo "Skipping $file (not found or not a regular file)"
              fi
            done
            cd .. # Go back to the root directory
            echo "--- Finished processing $dir ---"
          }

          # Call the function for each directory
          compile_and_rename "logic_v1"
          compile_and_rename "logic_v2"

      # Install zip utility (optional but recommended)
      - name: Install zip
        run: apt-get update && apt-get install -y zip || echo "zip already installed or apt not available"

      # Zip all compiled PDFs (using find for robustness)
      - name: Zip All PDFs
        run: |
          # Find the renamed PDFs in their respective directories
          find logic_v1 logic_v2 -maxdepth 1 -name 'logic_v*_*.pdf' -print0 | xargs -0 zip -r definitely_not_agi.zip
          # Check if zip file was created and is not empty
          if [ ! -s definitely_not_agi.zip ]; then
            echo "Zip file is empty or was not created. Check for PDF files."
            ls -R logic_v* # List files for debugging
            # Decide if this should be a fatal error
            # exit 1
          fi

      # Create GitHub release with the combined zip file
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          # IMPORTANT: Ensure this filename matches the one created in the 'Zip All PDFs' step
          files: definitely_not_agi.zip # Changed from all_pdfs.zip
          tag_name: pdf-${{ github.sha }}
          name: PDF Build ${{ github.sha }}
          body: |
            Automated PDF build from commit ${{ github.sha }}
            Includes all compiled PDFs in definitely_not_agi.zip.
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
